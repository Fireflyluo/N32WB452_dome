<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\dame.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\dame.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 6190004: Last Updated: Thu Oct 23 11:50:37 2025
<BR><P>
<H3>Maximum Stack Usage =        268 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; BSP_UART_Init &rArr; bsp_uart_InterruptInit &rArr; USART_Init &rArr; RCC_GetClocksFreqValue
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[8]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8]">PendSV_Handler</a><BR>
 <LI><a href="#[1c]">ADC1_2_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1c]">ADC1_2_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[1c]">ADC1_2_IRQHandler</a> from startup_n32wb452.o(.text) referenced from startup_n32wb452.o(RESET)
 <LI><a href="#[4]">BusFault_Handler</a> from n32wb452_it.o(.text.BusFault_Handler) referenced from startup_n32wb452.o(RESET)
 <LI><a href="#[1f]">CAN1_RX1_IRQHandler</a> from startup_n32wb452.o(.text) referenced from startup_n32wb452.o(RESET)
 <LI><a href="#[20]">CAN1_SCE_IRQHandler</a> from startup_n32wb452.o(.text) referenced from startup_n32wb452.o(RESET)
 <LI><a href="#[4a]">CAN2_RX0_IRQHandler</a> from startup_n32wb452.o(.text) referenced from startup_n32wb452.o(RESET)
 <LI><a href="#[4b]">CAN2_RX1_IRQHandler</a> from startup_n32wb452.o(.text) referenced from startup_n32wb452.o(RESET)
 <LI><a href="#[4c]">CAN2_SCE_IRQHandler</a> from startup_n32wb452.o(.text) referenced from startup_n32wb452.o(RESET)
 <LI><a href="#[49]">CAN2_TX_IRQHandler</a> from startup_n32wb452.o(.text) referenced from startup_n32wb452.o(RESET)
 <LI><a href="#[15]">DMA1_Channel1_IRQHandler</a> from startup_n32wb452.o(.text) referenced from startup_n32wb452.o(RESET)
 <LI><a href="#[16]">DMA1_Channel2_IRQHandler</a> from startup_n32wb452.o(.text) referenced from startup_n32wb452.o(RESET)
 <LI><a href="#[17]">DMA1_Channel3_IRQHandler</a> from startup_n32wb452.o(.text) referenced from startup_n32wb452.o(RESET)
 <LI><a href="#[18]">DMA1_Channel4_IRQHandler</a> from startup_n32wb452.o(.text) referenced from startup_n32wb452.o(RESET)
 <LI><a href="#[19]">DMA1_Channel5_IRQHandler</a> from startup_n32wb452.o(.text) referenced from startup_n32wb452.o(RESET)
 <LI><a href="#[1a]">DMA1_Channel6_IRQHandler</a> from startup_n32wb452.o(.text) referenced from startup_n32wb452.o(RESET)
 <LI><a href="#[1b]">DMA1_Channel7_IRQHandler</a> from startup_n32wb452.o(.text) referenced from startup_n32wb452.o(RESET)
 <LI><a href="#[56]">DMA1_Channel8_IRQHandler</a> from startup_n32wb452.o(.text) referenced from startup_n32wb452.o(RESET)
 <LI><a href="#[42]">DMA2_Channel1_IRQHandler</a> from startup_n32wb452.o(.text) referenced from startup_n32wb452.o(RESET)
 <LI><a href="#[43]">DMA2_Channel2_IRQHandler</a> from startup_n32wb452.o(.text) referenced from startup_n32wb452.o(RESET)
 <LI><a href="#[44]">DMA2_Channel3_IRQHandler</a> from startup_n32wb452.o(.text) referenced from startup_n32wb452.o(RESET)
 <LI><a href="#[45]">DMA2_Channel4_IRQHandler</a> from startup_n32wb452.o(.text) referenced from startup_n32wb452.o(RESET)
 <LI><a href="#[46]">DMA2_Channel5_IRQHandler</a> from startup_n32wb452.o(.text) referenced from startup_n32wb452.o(RESET)
 <LI><a href="#[4e]">DMA2_Channel6_IRQHandler</a> from startup_n32wb452.o(.text) referenced from startup_n32wb452.o(RESET)
 <LI><a href="#[4f]">DMA2_Channel7_IRQHandler</a> from startup_n32wb452.o(.text) referenced from startup_n32wb452.o(RESET)
 <LI><a href="#[57]">DMA2_Channel8_IRQHandler</a> from startup_n32wb452.o(.text) referenced from startup_n32wb452.o(RESET)
 <LI><a href="#[58]">DVP_IRQHandler</a> from startup_n32wb452.o(.text) referenced from startup_n32wb452.o(RESET)
 <LI><a href="#[7]">DebugMon_Handler</a> from n32wb452_it.o(.text.DebugMon_Handler) referenced from startup_n32wb452.o(RESET)
 <LI><a href="#[10]">EXTI0_IRQHandler</a> from startup_n32wb452.o(.text) referenced from startup_n32wb452.o(RESET)
 <LI><a href="#[32]">EXTI15_10_IRQHandler</a> from startup_n32wb452.o(.text) referenced from startup_n32wb452.o(RESET)
 <LI><a href="#[11]">EXTI1_IRQHandler</a> from startup_n32wb452.o(.text) referenced from startup_n32wb452.o(RESET)
 <LI><a href="#[12]">EXTI2_IRQHandler</a> from startup_n32wb452.o(.text) referenced from startup_n32wb452.o(RESET)
 <LI><a href="#[13]">EXTI3_IRQHandler</a> from startup_n32wb452.o(.text) referenced from startup_n32wb452.o(RESET)
 <LI><a href="#[14]">EXTI4_IRQHandler</a> from startup_n32wb452.o(.text) referenced from startup_n32wb452.o(RESET)
 <LI><a href="#[21]">EXTI9_5_IRQHandler</a> from startup_n32wb452.o(.text) referenced from startup_n32wb452.o(RESET)
 <LI><a href="#[e]">FLASH_IRQHandler</a> from startup_n32wb452.o(.text) referenced from startup_n32wb452.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from n32wb452_it.o(.text.HardFault_Handler) referenced from startup_n32wb452.o(RESET)
 <LI><a href="#[2a]">I2C1_ER_IRQHandler</a> from startup_n32wb452.o(.text) referenced from startup_n32wb452.o(RESET)
 <LI><a href="#[29]">I2C1_EV_IRQHandler</a> from startup_n32wb452.o(.text) referenced from startup_n32wb452.o(RESET)
 <LI><a href="#[2c]">I2C2_ER_IRQHandler</a> from startup_n32wb452.o(.text) referenced from startup_n32wb452.o(RESET)
 <LI><a href="#[2b]">I2C2_EV_IRQHandler</a> from startup_n32wb452.o(.text) referenced from startup_n32wb452.o(RESET)
 <LI><a href="#[51]">I2C3_ER_IRQHandler</a> from startup_n32wb452.o(.text) referenced from startup_n32wb452.o(RESET)
 <LI><a href="#[50]">I2C3_EV_IRQHandler</a> from startup_n32wb452.o(.text) referenced from startup_n32wb452.o(RESET)
 <LI><a href="#[53]">I2C4_ER_IRQHandler</a> from startup_n32wb452.o(.text) referenced from startup_n32wb452.o(RESET)
 <LI><a href="#[52]">I2C4_EV_IRQHandler</a> from startup_n32wb452.o(.text) referenced from startup_n32wb452.o(RESET)
 <LI><a href="#[5a]">MMU_IRQHandler</a> from startup_n32wb452.o(.text) referenced from startup_n32wb452.o(RESET)
 <LI><a href="#[3]">MemManage_Handler</a> from n32wb452_it.o(.text.MemManage_Handler) referenced from startup_n32wb452.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from n32wb452_it.o(.text.NMI_Handler) referenced from startup_n32wb452.o(RESET)
 <LI><a href="#[b]">PVD_IRQHandler</a> from startup_n32wb452.o(.text) referenced from startup_n32wb452.o(RESET)
 <LI><a href="#[8]">PendSV_Handler</a> from startup_n32wb452.o(.text) referenced from startup_n32wb452.o(RESET)
 <LI><a href="#[f]">RCC_IRQHandler</a> from startup_n32wb452.o(.text) referenced from startup_n32wb452.o(RESET)
 <LI><a href="#[39]">RESERVE47_IRQHandler</a> from startup_n32wb452.o(.text) referenced from startup_n32wb452.o(RESET)
 <LI><a href="#[3a]">RESERVE48_IRQHandler</a> from startup_n32wb452.o(.text) referenced from startup_n32wb452.o(RESET)
 <LI><a href="#[47]">RESERVE61_IRQHandler</a> from startup_n32wb452.o(.text) referenced from startup_n32wb452.o(RESET)
 <LI><a href="#[48]">RESERVE62_IRQHandler</a> from startup_n32wb452.o(.text) referenced from startup_n32wb452.o(RESET)
 <LI><a href="#[4d]">RESERVE67_IRQHandler</a> from startup_n32wb452.o(.text) referenced from startup_n32wb452.o(RESET)
 <LI><a href="#[5c]">RESERVE82_IRQHandler</a> from startup_n32wb452.o(.text) referenced from startup_n32wb452.o(RESET)
 <LI><a href="#[5d]">RESERVE83_IRQHandler</a> from startup_n32wb452.o(.text) referenced from startup_n32wb452.o(RESET)
 <LI><a href="#[5e]">RESERVE84_IRQHandler</a> from startup_n32wb452.o(.text) referenced from startup_n32wb452.o(RESET)
 <LI><a href="#[5f]">RSRAM_IRQHandler</a> from startup_n32wb452.o(.text) referenced from startup_n32wb452.o(RESET)
 <LI><a href="#[33]">RTCAlarm_IRQHandler</a> from startup_n32wb452.o(.text) referenced from startup_n32wb452.o(RESET)
 <LI><a href="#[d]">RTC_WKUP_IRQHandler</a> from startup_n32wb452.o(.text) referenced from startup_n32wb452.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_n32wb452.o(.text) referenced from startup_n32wb452.o(RESET)
 <LI><a href="#[59]">SAC_IRQHandler</a> from startup_n32wb452.o(.text) referenced from startup_n32wb452.o(RESET)
 <LI><a href="#[3b]">SDIO_IRQHandler</a> from startup_n32wb452.o(.text) referenced from startup_n32wb452.o(RESET)
 <LI><a href="#[2d]">SPI1_IRQHandler</a> from startup_n32wb452.o(.text) referenced from startup_n32wb452.o(RESET)
 <LI><a href="#[2e]">SPI2_IRQHandler</a> from startup_n32wb452.o(.text) referenced from startup_n32wb452.o(RESET)
 <LI><a href="#[3d]">SPI3_IRQHandler</a> from startup_n32wb452.o(.text) referenced from startup_n32wb452.o(RESET)
 <LI><a href="#[6]">SVC_Handler</a> from n32wb452_it.o(.text.SVC_Handler) referenced from startup_n32wb452.o(RESET)
 <LI><a href="#[9]">SysTick_Handler</a> from n32wb452_it.o(.text.SysTick_Handler) referenced from startup_n32wb452.o(RESET)
 <LI><a href="#[61]">SystemInit</a> from system_n32wb452.o(.text.SystemInit) referenced from startup_n32wb452.o(.text)
 <LI><a href="#[c]">TAMPER_IRQHandler</a> from startup_n32wb452.o(.text) referenced from startup_n32wb452.o(RESET)
 <LI><a href="#[22]">TIM1_BRK_IRQHandler</a> from startup_n32wb452.o(.text) referenced from startup_n32wb452.o(RESET)
 <LI><a href="#[25]">TIM1_CC_IRQHandler</a> from startup_n32wb452.o(.text) referenced from startup_n32wb452.o(RESET)
 <LI><a href="#[24]">TIM1_TRG_COM_IRQHandler</a> from startup_n32wb452.o(.text) referenced from startup_n32wb452.o(RESET)
 <LI><a href="#[23]">TIM1_UP_IRQHandler</a> from startup_n32wb452.o(.text) referenced from startup_n32wb452.o(RESET)
 <LI><a href="#[26]">TIM2_IRQHandler</a> from startup_n32wb452.o(.text) referenced from startup_n32wb452.o(RESET)
 <LI><a href="#[27]">TIM3_IRQHandler</a> from startup_n32wb452.o(.text) referenced from startup_n32wb452.o(RESET)
 <LI><a href="#[28]">TIM4_IRQHandler</a> from startup_n32wb452.o(.text) referenced from startup_n32wb452.o(RESET)
 <LI><a href="#[3c]">TIM5_IRQHandler</a> from startup_n32wb452.o(.text) referenced from startup_n32wb452.o(RESET)
 <LI><a href="#[40]">TIM6_IRQHandler</a> from startup_n32wb452.o(.text) referenced from startup_n32wb452.o(RESET)
 <LI><a href="#[41]">TIM7_IRQHandler</a> from startup_n32wb452.o(.text) referenced from startup_n32wb452.o(RESET)
 <LI><a href="#[35]">TIM8_BRK_IRQHandler</a> from startup_n32wb452.o(.text) referenced from startup_n32wb452.o(RESET)
 <LI><a href="#[38]">TIM8_CC_IRQHandler</a> from startup_n32wb452.o(.text) referenced from startup_n32wb452.o(RESET)
 <LI><a href="#[37]">TIM8_TRG_COM_IRQHandler</a> from startup_n32wb452.o(.text) referenced from startup_n32wb452.o(RESET)
 <LI><a href="#[36]">TIM8_UP_IRQHandler</a> from startup_n32wb452.o(.text) referenced from startup_n32wb452.o(RESET)
 <LI><a href="#[5b]">TSC_IRQHandler</a> from startup_n32wb452.o(.text) referenced from startup_n32wb452.o(RESET)
 <LI><a href="#[3e]">UART4_IRQHandler</a> from startup_n32wb452.o(.text) referenced from startup_n32wb452.o(RESET)
 <LI><a href="#[3f]">UART5_IRQHandler</a> from startup_n32wb452.o(.text) referenced from startup_n32wb452.o(RESET)
 <LI><a href="#[54]">UART6_IRQHandler</a> from startup_n32wb452.o(.text) referenced from startup_n32wb452.o(RESET)
 <LI><a href="#[55]">UART7_IRQHandler</a> from startup_n32wb452.o(.text) referenced from startup_n32wb452.o(RESET)
 <LI><a href="#[2f]">USART1_IRQHandler</a> from startup_n32wb452.o(.text) referenced from startup_n32wb452.o(RESET)
 <LI><a href="#[30]">USART2_IRQHandler</a> from bsp_uart.o(.text.USART2_IRQHandler) referenced from startup_n32wb452.o(RESET)
 <LI><a href="#[31]">USART3_IRQHandler</a> from bsp_uart.o(.text.USART3_IRQHandler) referenced from startup_n32wb452.o(RESET)
 <LI><a href="#[34]">USBWakeUp_IRQHandler</a> from startup_n32wb452.o(.text) referenced from startup_n32wb452.o(RESET)
 <LI><a href="#[1d]">USB_HP_CAN1_TX_IRQHandler</a> from startup_n32wb452.o(.text) referenced from startup_n32wb452.o(RESET)
 <LI><a href="#[1e]">USB_LP_CAN1_RX0_IRQHandler</a> from startup_n32wb452.o(.text) referenced from startup_n32wb452.o(RESET)
 <LI><a href="#[5]">UsageFault_Handler</a> from n32wb452_it.o(.text.UsageFault_Handler) referenced from startup_n32wb452.o(RESET)
 <LI><a href="#[a]">WWDG_IRQHandler</a> from startup_n32wb452.o(.text) referenced from startup_n32wb452.o(RESET)
 <LI><a href="#[62]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_n32wb452.o(.text)
 <LI><a href="#[60]">main</a> from main.o(.text.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[62]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32wb452.o(.text)
</UL>
<P><STRONG><a name="[8b]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[63]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[65]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[8c]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[8d]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[8e]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[8f]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[90]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_n32wb452.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32wb452.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_n32wb452.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_n32wb452.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>ADC1_2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32wb452.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_2_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_2_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_n32wb452.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>CAN1_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32wb452.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32wb452.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>CAN1_SCE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32wb452.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32wb452.o(RESET)
</UL>
<P><STRONG><a name="[4a]"></a>CAN2_RX0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32wb452.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32wb452.o(RESET)
</UL>
<P><STRONG><a name="[4b]"></a>CAN2_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32wb452.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32wb452.o(RESET)
</UL>
<P><STRONG><a name="[4c]"></a>CAN2_SCE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32wb452.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32wb452.o(RESET)
</UL>
<P><STRONG><a name="[49]"></a>CAN2_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32wb452.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32wb452.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>DMA1_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32wb452.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32wb452.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>DMA1_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32wb452.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32wb452.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>DMA1_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32wb452.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32wb452.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>DMA1_Channel4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32wb452.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32wb452.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>DMA1_Channel5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32wb452.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32wb452.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>DMA1_Channel6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32wb452.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32wb452.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>DMA1_Channel7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32wb452.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32wb452.o(RESET)
</UL>
<P><STRONG><a name="[56]"></a>DMA1_Channel8_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32wb452.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32wb452.o(RESET)
</UL>
<P><STRONG><a name="[42]"></a>DMA2_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32wb452.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32wb452.o(RESET)
</UL>
<P><STRONG><a name="[43]"></a>DMA2_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32wb452.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32wb452.o(RESET)
</UL>
<P><STRONG><a name="[44]"></a>DMA2_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32wb452.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32wb452.o(RESET)
</UL>
<P><STRONG><a name="[45]"></a>DMA2_Channel4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32wb452.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32wb452.o(RESET)
</UL>
<P><STRONG><a name="[46]"></a>DMA2_Channel5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32wb452.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32wb452.o(RESET)
</UL>
<P><STRONG><a name="[4e]"></a>DMA2_Channel6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32wb452.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32wb452.o(RESET)
</UL>
<P><STRONG><a name="[4f]"></a>DMA2_Channel7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32wb452.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32wb452.o(RESET)
</UL>
<P><STRONG><a name="[57]"></a>DMA2_Channel8_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32wb452.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32wb452.o(RESET)
</UL>
<P><STRONG><a name="[58]"></a>DVP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32wb452.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32wb452.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>EXTI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32wb452.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32wb452.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>EXTI15_10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32wb452.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32wb452.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>EXTI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32wb452.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32wb452.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>EXTI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32wb452.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32wb452.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>EXTI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32wb452.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32wb452.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>EXTI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32wb452.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32wb452.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>EXTI9_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32wb452.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32wb452.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32wb452.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32wb452.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>I2C1_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32wb452.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32wb452.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>I2C1_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32wb452.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32wb452.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>I2C2_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32wb452.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32wb452.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>I2C2_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32wb452.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32wb452.o(RESET)
</UL>
<P><STRONG><a name="[51]"></a>I2C3_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32wb452.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32wb452.o(RESET)
</UL>
<P><STRONG><a name="[50]"></a>I2C3_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32wb452.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32wb452.o(RESET)
</UL>
<P><STRONG><a name="[53]"></a>I2C4_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32wb452.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32wb452.o(RESET)
</UL>
<P><STRONG><a name="[52]"></a>I2C4_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32wb452.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32wb452.o(RESET)
</UL>
<P><STRONG><a name="[5a]"></a>MMU_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32wb452.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32wb452.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>PVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32wb452.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32wb452.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32wb452.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32wb452.o(RESET)
</UL>
<P><STRONG><a name="[5f]"></a>RSRAM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32wb452.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32wb452.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>RTCAlarm_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32wb452.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32wb452.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>RTC_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32wb452.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32wb452.o(RESET)
</UL>
<P><STRONG><a name="[59]"></a>SAC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32wb452.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32wb452.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>SDIO_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32wb452.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32wb452.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32wb452.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32wb452.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32wb452.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32wb452.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>SPI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32wb452.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32wb452.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>TAMPER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32wb452.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32wb452.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>TIM1_BRK_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32wb452.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32wb452.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32wb452.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32wb452.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>TIM1_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32wb452.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32wb452.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>TIM1_UP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32wb452.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32wb452.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>TIM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32wb452.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32wb452.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>TIM3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32wb452.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32wb452.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>TIM4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32wb452.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32wb452.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>TIM5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32wb452.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32wb452.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>TIM6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32wb452.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32wb452.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>TIM7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32wb452.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32wb452.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>TIM8_BRK_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32wb452.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32wb452.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>TIM8_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32wb452.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32wb452.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>TIM8_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32wb452.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32wb452.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>TIM8_UP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32wb452.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32wb452.o(RESET)
</UL>
<P><STRONG><a name="[5b]"></a>TSC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32wb452.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32wb452.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>UART4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32wb452.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32wb452.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>UART5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32wb452.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32wb452.o(RESET)
</UL>
<P><STRONG><a name="[54]"></a>UART6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32wb452.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32wb452.o(RESET)
</UL>
<P><STRONG><a name="[55]"></a>UART7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32wb452.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32wb452.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>USART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32wb452.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32wb452.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>USBWakeUp_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32wb452.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32wb452.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>USB_HP_CAN1_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32wb452.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32wb452.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>USB_LP_CAN1_RX0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32wb452.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32wb452.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32wb452.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32wb452.o(RESET)
</UL>
<P><STRONG><a name="[64]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[91]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[66]"></a>BSP_GPIO_Init</STRONG> (Thumb, 202 bytes, Stack size 40 bytes, bsp_gpio.o(.text.BSP_GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = BSP_GPIO_Init &rArr; GPIO_InitPeripheral
</UL>
<BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_InitPeripheral
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_EnableAPB2PeriphClk
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[69]"></a>BSP_GPIO_TogglePin</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, bsp_gpio.o(.text.BSP_GPIO_TogglePin))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = BSP_GPIO_TogglePin &rArr; GPIO_ReadOutputDataBit
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadOutputDataBit
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[6b]"></a>BSP_GPIO_WritePin</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, bsp_gpio.o(.text.BSP_GPIO_WritePin))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = BSP_GPIO_WritePin &rArr; GPIO_WriteBit
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_WriteBit
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[6d]"></a>BSP_UART_Init</STRONG> (Thumb, 140 bytes, Stack size 40 bytes, bsp_uart.o(.text.BSP_UART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 212<LI>Call Chain = BSP_UART_Init &rArr; bsp_uart_InterruptInit &rArr; USART_Init &rArr; RCC_GetClocksFreqValue
</UL>
<BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_uart_InterruptInit
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_uart_polingInit
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_uart_state
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[71]"></a>BSP_Uart_Transmit_IT</STRONG> (Thumb, 140 bytes, Stack size 32 bytes, bsp_uart.o(.text.BSP_Uart_Transmit_IT))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = BSP_Uart_Transmit_IT &rArr; USART_ConfigInt
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendData
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ConfigInt
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_uart_state
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4]"></a>BusFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, n32wb452_it.o(.text.BusFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32wb452.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, n32wb452_it.o(.text.DebugMon_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32wb452.o(RESET)
</UL>
<P><STRONG><a name="[8a]"></a>Delay</STRONG> (Thumb, 26 bytes, Stack size 4 bytes, main.o(.text.Delay))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[84]"></a>GPIO_ConfigPinRemap</STRONG> (Thumb, 986 bytes, Stack size 28 bytes, n32wb452_gpio.o(.text.GPIO_ConfigPinRemap))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = GPIO_ConfigPinRemap
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_uart_InterruptInit
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_uart_polingInit
</UL>

<P><STRONG><a name="[68]"></a>GPIO_InitPeripheral</STRONG> (Thumb, 390 bytes, Stack size 32 bytes, n32wb452_gpio.o(.text.GPIO_InitPeripheral))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = GPIO_InitPeripheral
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_uart_InterruptInit
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_uart_polingInit
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_GPIO_Init
</UL>

<P><STRONG><a name="[85]"></a>GPIO_InitStruct</STRONG> (Thumb, 28 bytes, Stack size 4 bytes, n32wb452_gpio.o(.text.GPIO_InitStruct))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = GPIO_InitStruct
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_uart_InterruptInit
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_uart_polingInit
</UL>

<P><STRONG><a name="[6a]"></a>GPIO_ReadOutputDataBit</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, n32wb452_gpio.o(.text.GPIO_ReadOutputDataBit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GPIO_ReadOutputDataBit
</UL>
<BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_GPIO_TogglePin
</UL>

<P><STRONG><a name="[89]"></a>GPIO_ResetBits</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, n32wb452_gpio.o(.text.GPIO_ResetBits))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GPIO_ResetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[6c]"></a>GPIO_WriteBit</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, n32wb452_gpio.o(.text.GPIO_WriteBit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GPIO_WriteBit
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_GPIO_WritePin
</UL>

<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, n32wb452_it.o(.text.HardFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32wb452.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>MemManage_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, n32wb452_it.o(.text.MemManage_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32wb452.o(RESET)
</UL>
<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, n32wb452_it.o(.text.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32wb452.o(RESET)
</UL>
<P><STRONG><a name="[83]"></a>NVIC_Init</STRONG> (Thumb, 170 bytes, Stack size 16 bytes, misc.o(.text.NVIC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = NVIC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_uart_InterruptInit
</UL>

<P><STRONG><a name="[82]"></a>NVIC_PriorityGroupConfig</STRONG> (Thumb, 28 bytes, Stack size 4 bytes, misc.o(.text.NVIC_PriorityGroupConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = NVIC_PriorityGroupConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_uart_InterruptInit
</UL>

<P><STRONG><a name="[74]"></a>RCC_ConfigSysclk</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, n32wb452_rcc.o(.text.RCC_ConfigSysclk))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RCC_ConfigSysclk
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[81]"></a>RCC_EnableAPB1PeriphClk</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, n32wb452_rcc.o(.text.RCC_EnableAPB1PeriphClk))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RCC_EnableAPB1PeriphClk
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_uart_InterruptInit
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_uart_polingInit
</UL>

<P><STRONG><a name="[7e]"></a>RCC_EnableAPB1PeriphReset</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, n32wb452_rcc.o(.text.RCC_EnableAPB1PeriphReset))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RCC_EnableAPB1PeriphReset
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_DeInit
</UL>

<P><STRONG><a name="[67]"></a>RCC_EnableAPB2PeriphClk</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, n32wb452_rcc.o(.text.RCC_EnableAPB2PeriphClk))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RCC_EnableAPB2PeriphClk
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_uart_polingInit
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_GPIO_Init
</UL>

<P><STRONG><a name="[7d]"></a>RCC_EnableAPB2PeriphReset</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, n32wb452_rcc.o(.text.RCC_EnableAPB2PeriphReset))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RCC_EnableAPB2PeriphReset
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_DeInit
</UL>

<P><STRONG><a name="[80]"></a>RCC_GetClocksFreqValue</STRONG> (Thumb, 452 bytes, Stack size 28 bytes, n32wb452_rcc.o(.text.RCC_GetClocksFreqValue))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = RCC_GetClocksFreqValue
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
</UL>

<P><STRONG><a name="[75]"></a>RCC_GetSysclkSrc</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, n32wb452_rcc.o(.text.RCC_GetSysclkSrc))
<BR><BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[6]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, n32wb452_it.o(.text.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32wb452.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, n32wb452_it.o(.text.SysTick_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32wb452.o(RESET)
</UL>
<P><STRONG><a name="[61]"></a>SystemInit</STRONG> (Thumb, 296 bytes, Stack size 8 bytes, system_n32wb452.o(.text.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SystemInit &rArr; SetSysClock
</UL>
<BR>[Calls]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetSysclkSrc
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_ConfigSysclk
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetVDDDBKTrim
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClock
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_n32wb452.o(.text)
</UL>
<P><STRONG><a name="[30]"></a>USART2_IRQHandler</STRONG> (Thumb, 390 bytes, Stack size 48 bytes, bsp_uart.o(.text.USART2_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = USART2_IRQHandler &rArr; bsp_uart_error &rArr; USART_GetFlagStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ClrFlag
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetIntStatus
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ReceiveData
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendData
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ConfigInt
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_uart_error
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_uart_state
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_n32wb452.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>USART3_IRQHandler</STRONG> (Thumb, 390 bytes, Stack size 48 bytes, bsp_uart.o(.text.USART3_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = USART3_IRQHandler &rArr; bsp_uart_error &rArr; USART_GetFlagStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ClrFlag
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetIntStatus
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ReceiveData
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendData
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ConfigInt
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_uart_error
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_uart_state
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_n32wb452.o(RESET)
</UL>
<P><STRONG><a name="[79]"></a>USART_ClrFlag</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, n32wb452_usart.o(.text.USART_ClrFlag))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USART_ClrFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART3_IRQHandler
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_IRQHandler
</UL>

<P><STRONG><a name="[73]"></a>USART_ConfigInt</STRONG> (Thumb, 146 bytes, Stack size 24 bytes, n32wb452_usart.o(.text.USART_ConfigInt))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = USART_ConfigInt
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART3_IRQHandler
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_IRQHandler
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_uart_InterruptInit
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_Uart_Transmit_IT
</UL>

<P><STRONG><a name="[7c]"></a>USART_DeInit</STRONG> (Thumb, 288 bytes, Stack size 40 bytes, n32wb452_usart.o(.text.USART_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = USART_DeInit &rArr; RCC_EnableAPB2PeriphReset
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_EnableAPB2PeriphReset
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_EnableAPB1PeriphReset
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_uart_InterruptInit
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_uart_polingInit
</UL>

<P><STRONG><a name="[87]"></a>USART_Enable</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, n32wb452_usart.o(.text.USART_Enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USART_Enable
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_uart_InterruptInit
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_uart_polingInit
</UL>

<P><STRONG><a name="[88]"></a>USART_GetFlagStatus</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, n32wb452_usart.o(.text.USART_GetFlagStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USART_GetFlagStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_uart_error
</UL>

<P><STRONG><a name="[78]"></a>USART_GetIntStatus</STRONG> (Thumb, 176 bytes, Stack size 24 bytes, n32wb452_usart.o(.text.USART_GetIntStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = USART_GetIntStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART3_IRQHandler
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_IRQHandler
</UL>

<P><STRONG><a name="[7f]"></a>USART_Init</STRONG> (Thumb, 334 bytes, Stack size 64 bytes, n32wb452_usart.o(.text.USART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = USART_Init &rArr; RCC_GetClocksFreqValue
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetClocksFreqValue
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_uart_InterruptInit
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_uart_polingInit
</UL>

<P><STRONG><a name="[7a]"></a>USART_ReceiveData</STRONG> (Thumb, 16 bytes, Stack size 4 bytes, n32wb452_usart.o(.text.USART_ReceiveData))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = USART_ReceiveData
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART3_IRQHandler
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_IRQHandler
</UL>

<P><STRONG><a name="[72]"></a>USART_SendData</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, n32wb452_usart.o(.text.USART_SendData))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USART_SendData
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART3_IRQHandler
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_IRQHandler
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_Uart_Transmit_IT
</UL>

<P><STRONG><a name="[86]"></a>USART_StructInit</STRONG> (Thumb, 40 bytes, Stack size 4 bytes, n32wb452_usart.o(.text.USART_StructInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = USART_StructInit
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_uart_InterruptInit
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_uart_polingInit
</UL>

<P><STRONG><a name="[5]"></a>UsageFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, n32wb452_it.o(.text.UsageFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32wb452.o(RESET)
</UL>
<P><STRONG><a name="[60]"></a>main</STRONG> (Thumb, 248 bytes, Stack size 56 bytes, main.o(.text.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 268<LI>Call Chain = main &rArr; BSP_UART_Init &rArr; bsp_uart_InterruptInit &rArr; USART_Init &rArr; RCC_GetClocksFreqValue
</UL>
<BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_GPIO_TogglePin
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_Uart_Transmit_IT
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_UART_Init
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_GPIO_WritePin
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_GPIO_Init
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[92]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[93]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[94]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[6e]"></a>get_uart_state</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, bsp_uart.o(.text.get_uart_state))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = get_uart_state
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART3_IRQHandler
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_IRQHandler
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_uart_error
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_Uart_Transmit_IT
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_UART_Init
</UL>

<P><STRONG><a name="[6f]"></a>bsp_uart_polingInit</STRONG> (Thumb, 384 bytes, Stack size 72 bytes, bsp_uart.o(.text.bsp_uart_polingInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 164<LI>Call Chain = bsp_uart_polingInit &rArr; USART_Init &rArr; RCC_GetClocksFreqValue
</UL>
<BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Enable
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_StructInit
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ConfigPinRemap
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_DeInit
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_InitPeripheral
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_InitStruct
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_EnableAPB2PeriphClk
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_EnableAPB1PeriphClk
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_UART_Init
</UL>

<P><STRONG><a name="[70]"></a>bsp_uart_InterruptInit</STRONG> (Thumb, 496 bytes, Stack size 80 bytes, bsp_uart.o(.text.bsp_uart_InterruptInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 172<LI>Call Chain = bsp_uart_InterruptInit &rArr; USART_Init &rArr; RCC_GetClocksFreqValue
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ConfigInt
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_PriorityGroupConfig
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Enable
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_StructInit
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ConfigPinRemap
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_DeInit
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_InitPeripheral
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_InitStruct
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_EnableAPB1PeriphClk
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_UART_Init
</UL>

<P><STRONG><a name="[7b]"></a>bsp_uart_error</STRONG> (Thumb, 210 bytes, Stack size 24 bytes, bsp_uart.o(.text.bsp_uart_error))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = bsp_uart_error &rArr; USART_GetFlagStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetFlagStatus
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_uart_state
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART3_IRQHandler
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_IRQHandler
</UL>

<P><STRONG><a name="[76]"></a>SetSysClock</STRONG> (Thumb, 366 bytes, Stack size 24 bytes, system_n32wb452.o(.text.SetSysClock))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SetSysClock
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[77]"></a>SetVDDDBKTrim</STRONG> (Thumb, 152 bytes, Stack size 8 bytes, system_n32wb452.o(.text.SetVDDDBKTrim))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SetVDDDBKTrim
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[39]"></a>RESERVE47_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32wb452.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32wb452.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>RESERVE48_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32wb452.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32wb452.o(RESET)
</UL>
<P><STRONG><a name="[47]"></a>RESERVE61_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32wb452.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32wb452.o(RESET)
</UL>
<P><STRONG><a name="[48]"></a>RESERVE62_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32wb452.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32wb452.o(RESET)
</UL>
<P><STRONG><a name="[4d]"></a>RESERVE67_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32wb452.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32wb452.o(RESET)
</UL>
<P><STRONG><a name="[5c]"></a>RESERVE82_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32wb452.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32wb452.o(RESET)
</UL>
<P><STRONG><a name="[5d]"></a>RESERVE83_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32wb452.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32wb452.o(RESET)
</UL>
<P><STRONG><a name="[5e]"></a>RESERVE84_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32wb452.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32wb452.o(RESET)
</UL><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
