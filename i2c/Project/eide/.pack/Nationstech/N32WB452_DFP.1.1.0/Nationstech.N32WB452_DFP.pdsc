<?xml version="1.0" encoding="UTF-8"?>

<package schemaVersion="1.4.0" 
    xmlns:xs="http://www.w3.org/2001/XMLSchema-instance" xs:noNamespaceSchemaLocation="PACK.xsd">
    <vendor>Nationstech</vendor>
    <url>http://www.keil.com/pack/</url>
    <name>N32WB452_DFP</name>

    <description>Nationstech N32WB452 Series Device Support, Drivers and Examples</description>

    <releases>
		<release version="1.1.0">
            Modify some errors of device description.
        </release>
		<release version="1.0.6">
            Modify some errors of device description.
        </release>
        <release version="1.0.5">
			Add TIM1 and TIM8 TIMx_CCDAT5 registers.
			del TIM2~TIM5 TIMx_PEPCNT TIMx_BKDT TIMx_CCMOD3 TIMx_CCDAT6 registers.
			del TIM6 and TIM7 TIMx_SMCTRL TIMx_CCMOD1/2 TIMx_CCEN TIMx_REPCNT TIMx_CCDAT1/2/3/4 TIMx_DCTRL TIMx_DADDR TIMx_BKDT TIMx_CCMOD3 TIMx_CCDAT6 registers.
            Supplement CAN CAN_FiBx registers.
        </release>	
	
        <release version="1.0.4">
            Add WWDG peripheral
        </release>
        <release version="1.0.3">
            Modify some errors of device description.
        </release>
        <release version="1.0.2">
            Modify some errors of device description.
            Delete firmware.
        </release>
        <release version="1.0.1">
            Fix some bugs.
        </release>
        <release version="1.0.0">
            Fix some bugs.
        </release>
        <release version="0.4.0">
            Fix some bugs.
        </release>
        <release version="0.3.0">
            Fix some bugs.
        </release>
        <release version="0.2.0">
            Fix some bugs.
        </release>
        <release version="0.1.0">
            Alpha version of N32WB452 Device Family Pack.
        </release>
    </releases>

    <keywords>
        <keyword>Nationstech</keyword>
        <keyword>Device Support</keyword>
        <keyword>N32WB452</keyword>
        <keyword>N32</keyword>
    </keywords>


    <devices>
        <family Dfamily="N32WB452 Series" Dvendor="Nationstech:184">
            <processor Dcore="Cortex-M4" DcoreVersion="r0p1" Dfpu="1" Dmpu="0" Dendian="Little-endian"/>
            <description>
            </description>
            <subFamily DsubFamily="N32WB452">
                <description>
Up to 144MHz ARM Cortex-M4F, 512KB Flash, 144KB SRAM, 7xU(S)ART, 4xI2C, 3xSPI, USB 2.0 FS Device, RTC, 2x 12bit 5Msps ADC, 2x12bit DAC, Hardware Cryptographic Engine, BLE support.&#xA;&#xD;
BLE5.0 :&#xA;&#xD;
- 2.4 GHz RF transceiver, support BLE5.0&#xA;&#xD;
- High receiver sensitivity (-94dBm @ BLE)&#xA;&#xD;
- Programmable transmitter power, up to +3dBm&#xA;&#xD;
- Built-in Balun/matching network&#xA;&#xD;
- Receiving power: 3.5mA@3.0V(DCDC)&#xA;&#xD;
- Transmission power: 3.6mA@3.0V/0 dBm(DCDC)&#xA;&#xD;
                    
                </description>
                <processor Dclock="144000000"/>
                <compile header="firmware/CMSIS/device/n32wb452.h" define="N32WB452 N32WB452 USE_STDPERIPH_DRIVER"/>

<device Dname="N32WB452CEQ6">
    <description>
&#xA;&#xD;
- Package:QFN48&#xA;&#xD;
- Clock:  144MHz&#xA;&#xD;
- Flash:  512KB&#xA;&#xD;
- SRAM:   144KB&#xA;&#xD;
- I/O:    29&#xA;&#xD;
- Voltage: 1.8V~3.6V -40~+105°C&#xA;&#xD;
- Timer:  8&#xA;&#xD;
- RTC:    1&#xA;&#xD;
- PWM:    23&#xA;&#xD;
- ADC:    2x12bit with 6 channels&#xA;&#xD;
- DAC:    2x12-bit&#xA;&#xD;
- USART:  3&#xA;&#xD;
- UART:   2&#xA;&#xD;
- SPI/I2S:3/2&#xA;&#xD;
- I2C:    2&#xA;&#xD;
- USB Device: 1&#xA;&#xD;
- CAN:    2&#xA;&#xD;
- TSC:    6&#xA;&#xD;
&#xA;&#xD;
Remark:&#xA;&#xD;
[1*] Only Single Wire&#xA;&#xD;
[Y*] Only LCD Mode&#xA;&#xD;

    </description>
    <memory id="IRAM1" access="rw" start="0x20000000" size="0x24000" default="1" init="0" />
    <memory id="IROM1" access="rx" start="0x08000000" size="0x80000" default="1" startup="1" />
    <algorithm name="Flash/N32WB452.FLM" start="0x08000000" size="0x80000" default="1" startup="1" />
    <debug svd="svd/N32WB452.svd"/>
</device>


<device Dname="N32WB452LEQ6">
    <description>
&#xA;&#xD;
- Package:QFN88&#xA;&#xD;
- Clock:  144MHz&#xA;&#xD;
- Flash:  512KB&#xA;&#xD;
- SRAM:   144KB&#xA;&#xD;
- I/O:    65&#xA;&#xD;
- Voltage: 1.8V~3.6V -40~+105°C&#xA;&#xD;
- Timer:  8&#xA;&#xD;
- RTC:    1&#xA;&#xD;
- PWM:    24&#xA;&#xD;
- ADC:    2x12bit with 16 channels&#xA;&#xD;
- DAC:    2x12-bit&#xA;&#xD;
- USART:  3&#xA;&#xD;
- UART:   4&#xA;&#xD;
- SPI/I2S:3/2&#xA;&#xD;
- I2C:    4&#xA;&#xD;
- USB Device: 1&#xA;&#xD;
- CAN:    2&#xA;&#xD;
- TSC:    18&#xA;&#xD;
- DVP:   Y&#xA;&#xD;
&#xA;&#xD;
Remark:&#xA;&#xD;
[1*] Only Single Wire&#xA;&#xD;
[Y*] Only LCD Mode&#xA;&#xD;

    </description>
    <memory id="IRAM1" access="rw" start="0x20000000" size="0x24000" default="1" init="0" />
    <memory id="IROM1" access="rx" start="0x08000000" size="0x80000" default="1" startup="1" />
    <algorithm name="Flash/N32WB452.FLM" start="0x08000000" size="0x80000" default="1" startup="1" />
    <debug svd="svd/N32WB452.svd"/>
</device>


<device Dname="N32WB452REQ6">
    <description>
&#xA;&#xD;
- Package:QFN64&#xA;&#xD;
- Clock:  144MHz&#xA;&#xD;
- Flash:  512KB&#xA;&#xD;
- SRAM:   144KB&#xA;&#xD;
- I/O:    43&#xA;&#xD;
- Voltage: 1.8V~3.6V -40~+105°C&#xA;&#xD;
- Timer:  8&#xA;&#xD;
- RTC:    1&#xA;&#xD;
- PWM:    24&#xA;&#xD;
- ADC:    2x12bit with 11 channels&#xA;&#xD;
- DAC:    2x12-bit&#xA;&#xD;
- USART:  3&#xA;&#xD;
- UART:   3&#xA;&#xD;
- SPI/I2S:3/2&#xA;&#xD;
- I2C:    3&#xA;&#xD;
- USB Device: 1&#xA;&#xD;
- CAN:    2&#xA;&#xD;
- TSC:    13&#xA;&#xD;
&#xA;&#xD;
Remark:&#xA;&#xD;
[1*] Only Single Wire&#xA;&#xD;
[Y*] Only LCD Mode&#xA;&#xD;

    </description>
    <memory id="IRAM1" access="rw" start="0x20000000" size="0x24000" default="1" init="0" />
    <memory id="IROM1" access="rx" start="0x08000000" size="0x80000" default="1" startup="1" />
    <algorithm name="Flash/N32WB452.FLM" start="0x08000000" size="0x80000" default="1" startup="1" />
    <debug svd="svd/N32WB452.svd"/>
</device>

            </subFamily>
        </family>
    </devices>
        

    <conditions>
        <condition id="Compiler ARM">            <!-- conditions selecting ARM Compiler -->
            <require Tcompiler="ARMCC"/>
        </condition>

        <condition id="N32WB452 CMSIS Device">            <!-- conditions selecting Devices -->
            <description>Nationstech N32WB452 Series devices</description>
            <require Cclass ="CMSIS" Cgroup="CORE" Csub=""/>
            <require Dvendor="Nationstech:184" Dname="N32*"/>
        </condition>

        <condition id="N32WB452 STDPERIPH">
            <description>Nationstech N32WB452 Standard Peripherals Drivers</description>
            <require condition="N32WB452 CMSIS Device"/>
            <require Cclass="Device" Cgroup="StdPeriph Drivers" Csub="Framework"/>
        </condition>

        <condition id="N32WB452 STDPERIPH RCC">
            <description>Nationstech N32WB452 Standard Peripherals Drivers with RCC</description>
            <require condition="N32WB452 STDPERIPH"/>
            <require Cclass="Device" Cgroup="StdPeriph Drivers" Csub="RCC"/>
        </condition>

        <condition id="N32WB452 Algorithm Common" >
            <description>Nationstech N32WB452 Series Algorithm Libraries Common Functions.</description>
            <require condition="N32WB452 CMSIS Device"/>
            <require Cclass ="Device" Cgroup="Algorithm Libs" Csub="Common"/>
        </condition>

    </conditions>

    <components>
        <component Cclass="Device" Cgroup="Startup" Cversion="1.0.0" condition="N32WB452 CMSIS Device">
            <description>Startup File for Nationstech N32WB452 Series</description>
            <files>
                <!--  include folder -->
                <file category="include" name="firmware/CMSIS/device/"/>
                <file category="source" name="firmware/CMSIS/device/startup/startup_n32wb452.s" attr="config" condition="N32WB452 CMSIS Device" version="1.0.0"/>
            </files>
        </component>

        <component Cclass="Device" Cgroup="System_N32WB452" Cversion="1.0.0" condition="N32WB452 CMSIS Device">
            <description>System Clock Config File for Nationstech N32WB452</description>
            <files>
                <!--  include folder -->
                <file category="include" name="firmware/CMSIS/device/"/>
                <file category="source" name="firmware/CMSIS/device/system_n32wb452.c" attr="config" version="1.0.0"/>
            </files>
        </component>

        <component Cclass="Device" Cgroup="StdPeriph Drivers" Csub="Framework" Cversion="1.0.0" condition="N32WB452 STDPERIPH">
            <description>Standard Peripherals Drivers Framework</description>
            <RTE_Components_h>
        #define RTE_DEVICE_STDPERIPH_FRAMEWORK
            </RTE_Components_h>
            <files>
                <file category="include" name="firmware/n32wb452_std_periph_driver/inc/"/>
                <file category="source" name="firmware/n32wb452_std_periph_driver/src/misc.c"/>
            </files>
        </component>

        <component Cclass="Device" Cgroup="StdPeriph Drivers" Csub="WWDG" Cversion="1.0.0" condition="N32WB452 STDPERIPH RCC">
            <description>Window watchdog (WWDG) driver for N32WB452</description>
            <RTE_Components_h>
        #define RTE_DEVICE_STDPERIPH_WWDG
            </RTE_Components_h>
            <files>
                <file category="header" name="firmware/n32wb452_std_periph_driver/inc/n32wb452_wwdg.h"/>
                <file category="source" name="firmware/n32wb452_std_periph_driver/src/n32wb452_wwdg.c"/>
            </files>
        </component>

        <component Cclass="Device" Cgroup="StdPeriph Drivers" Csub="USART" Cversion="1.0.0" condition="N32WB452 STDPERIPH RCC">
            <description>Universal synchronous asynchronous receiver transmitter (USART) driver for N32WB452</description>
            <RTE_Components_h>
        #define RTE_DEVICE_STDPERIPH_USART
            </RTE_Components_h>
            <files>
                <file category="header" name="firmware/n32wb452_std_periph_driver/inc/n32wb452_usart.h"/>
                <file category="source" name="firmware/n32wb452_std_periph_driver/src/n32wb452_usart.c"/>
            </files>
        </component>

        <component Cclass="Device" Cgroup="StdPeriph Drivers" Csub="TIMER" Cversion="1.0.0" condition="N32WB452 STDPERIPH RCC">
            <description>Timers (TIMER) driver for N32WB452</description>
            <RTE_Components_h>
        #define RTE_DEVICE_STDPERIPH_TIM
            </RTE_Components_h>
            <files>
                <file category="header" name="firmware/n32wb452_std_periph_driver/inc/n32wb452_tim.h"/>
                <file category="source" name="firmware/n32wb452_std_periph_driver/src/n32wb452_tim.c"/>
            </files>
        </component>

        <component Cclass="Device" Cgroup="StdPeriph Drivers" Csub="SPI" Cversion="1.0.0" condition="N32WB452 STDPERIPH RCC">
            <description>Serial peripheral interface (SPI) driver for N32WB452</description>
            <RTE_Components_h>
        #define RTE_DEVICE_STDPERIPH_SPI
            </RTE_Components_h>
            <files>
                <file category="header" name="firmware/n32wb452_std_periph_driver/inc/n32wb452_spi.h"/>
                <file category="source" name="firmware/n32wb452_std_periph_driver/src/n32wb452_spi.c"/>
            </files>
        </component>

        <component Cclass="Device" Cgroup="StdPeriph Drivers" Csub="ADC" Cversion="1.0.0" condition="N32WB452 STDPERIPH RCC">
            <description>Analog-to-digital converter (ADC) driver for N32WB452</description>
            <RTE_Components_h>
        #define RTE_DEVICE_STDPERIPH_ADC
            </RTE_Components_h>
            <files>
                <file category="header" name="firmware/n32wb452_std_periph_driver/inc/n32wb452_adc.h"/>
                <file category="source" name="firmware/n32wb452_std_periph_driver/src/n32wb452_adc.c"/>
            </files>
        </component>

        <component Cclass="Device" Cgroup="StdPeriph Drivers" Csub="BKP" Cversion="1.0.0" condition="N32WB452 STDPERIPH RCC">
            <description>Backup registers (BKPR) driver for N32WB452</description>
            <RTE_Components_h>
        #define RTE_DEVICE_STDPERIPH_BKP
            </RTE_Components_h>
            <files>
                <file category="header" name="firmware/n32wb452_std_periph_driver/inc/n32wb452_bkp.h"/>
                <file category="source" name="firmware/n32wb452_std_periph_driver/src/n32wb452_bkp.c"/>
            </files>
        </component>

        <component Cclass="Device" Cgroup="StdPeriph Drivers" Csub="CAN" Cversion="1.0.0" condition="N32WB452 STDPERIPH RCC">
            <description>Controller area network (CAN) driver for N32WB452</description>
            <RTE_Components_h>
        #define RTE_DEVICE_STDPERIPH_CAN
            </RTE_Components_h>
            <files>
                <file category="header" name="firmware/n32wb452_std_periph_driver/inc/n32wb452_can.h"/>
                <file category="source" name="firmware/n32wb452_std_periph_driver/src/n32wb452_can.c"/>
            </files>
        </component>

        <component Cclass="Device" Cgroup="StdPeriph Drivers" Csub="CRC" Cversion="1.0.0" condition="N32WB452 STDPERIPH RCC">
            <description>CRC calculation unit (CRC) driver for N32WB452</description>
            <RTE_Components_h>
        #define RTE_DEVICE_STDPERIPH_CRC
            </RTE_Components_h>
            <files>
                <file category="header" name="firmware/n32wb452_std_periph_driver/inc/n32wb452_crc.h"/>
                <file category="source" name="firmware/n32wb452_std_periph_driver/src/n32wb452_crc.c"/>
            </files>
        </component>

        <component Cclass="Device" Cgroup="StdPeriph Drivers" Csub="DAC" Cversion="1.0.0" condition="N32WB452 STDPERIPH RCC">
            <description>Digital-to-analog converter (DAC) driver for N32WB452</description>
            <RTE_Components_h>
        #define RTE_DEVICE_STDPERIPH_DAC
            </RTE_Components_h>
            <files>
                <file category="header" name="firmware/n32wb452_std_periph_driver/inc/n32wb452_dac.h"/>
                <file category="source" name="firmware/n32wb452_std_periph_driver/src/n32wb452_dac.c"/>
            </files>
        </component>

        <component Cclass="Device" Cgroup="StdPeriph Drivers" Csub="MCUDBG" Cversion="1.0.0" condition="N32WB452 STDPERIPH">
            <description>MCU debug component (MCUDBG) driver for N32WB452</description>
            <RTE_Components_h>
        #define RTE_DEVICE_STDPERIPH_DBG
            </RTE_Components_h>
            <files>
                <file category="header" name="firmware/n32wb452_std_periph_driver/inc/n32wb452_dbg.h"/>
                <file category="source" name="firmware/n32wb452_std_periph_driver/src/n32wb452_dbg.c"/>
            </files>
        </component>

        <component Cclass="Device" Cgroup="StdPeriph Drivers" Csub="DMA" Cversion="1.0.0" condition="N32WB452 STDPERIPH RCC">
            <description>DMA controller (DMA) driver for N32WB452</description>
            <RTE_Components_h>
        #define RTE_DEVICE_STDPERIPH_DMA
            </RTE_Components_h>
            <files>
                <file category="header" name="firmware/n32wb452_std_periph_driver/inc/n32wb452_dma.h"/>
                <file category="source" name="firmware/n32wb452_std_periph_driver/src/n32wb452_dma.c"/>
            </files>
        </component>

        <component Cclass="Device" Cgroup="StdPeriph Drivers" Csub="EXTI" Cversion="1.0.0" condition="N32WB452 STDPERIPH RCC">
            <description>External interrupt/event controller (EXTI) driver for N32WB452</description>
            <RTE_Components_h>
        #define RTE_DEVICE_STDPERIPH_EXTI
            </RTE_Components_h>
            <files>
                <file category="header" name="firmware/n32wb452_std_periph_driver/inc/n32wb452_exti.h"/>
                <file category="source" name="firmware/n32wb452_std_periph_driver/src/n32wb452_exti.c"/>
            </files>
        </component>

        <component Cclass="Device" Cgroup="StdPeriph Drivers" Csub="FLASH" Cversion="1.0.0" condition="N32WB452 STDPERIPH RCC">
            <description>Embedded Flash memory driver for N32WB452</description>
            <RTE_Components_h>
        #define RTE_DEVICE_STDPERIPH_FLASH
            </RTE_Components_h>
            <files>
                <file category="header" name="firmware/n32wb452_std_periph_driver/inc/n32wb452_flash.h"/>
                <file category="source" name="firmware/n32wb452_std_periph_driver/src/n32wb452_flash.c"/>
            </files>
        </component>

        <component Cclass="Device" Cgroup="StdPeriph Drivers" Csub="GPIO" Cversion="1.0.0" condition="N32WB452 STDPERIPH RCC">
            <description>General-purpose I/O (GPIO) driver for N32WB452</description>
            <RTE_Components_h>
        #define RTE_DEVICE_STDPERIPH_GPIO
            </RTE_Components_h>
            <files>
                <file category="header" name="firmware/n32wb452_std_periph_driver/inc/n32wb452_gpio.h"/>
                <file category="source" name="firmware/n32wb452_std_periph_driver/src/n32wb452_gpio.c"/>
            </files>
        </component>

        <component Cclass="Device" Cgroup="StdPeriph Drivers" Csub="I2C" Cversion="1.0.0" condition="N32WB452 STDPERIPH RCC">
            <description>Inter-integrated circuit (I2C) interface driver for N32WB452</description>
            <RTE_Components_h>
        #define RTE_DEVICE_STDPERIPH_I2C
            </RTE_Components_h>
            <files>
                <file category="header" name="firmware/n32wb452_std_periph_driver/inc/n32wb452_i2c.h"/>
                <file category="source" name="firmware/n32wb452_std_periph_driver/src/n32wb452_i2c.c"/>
            </files>
        </component>

        <component Cclass="Device" Cgroup="StdPeriph Drivers" Csub="IWDG" Cversion="1.0.0" condition="N32WB452 STDPERIPH">
            <description>Independent watchdog (IWDG) driver for N32WB452</description>
            <RTE_Components_h>
        #define RTE_DEVICE_STDPERIPH_IWDG
            </RTE_Components_h>
            <files>
                <file category="header" name="firmware/n32wb452_std_periph_driver/inc/n32wb452_iwdg.h"/>
                <file category="source" name="firmware/n32wb452_std_periph_driver/src/n32wb452_iwdg.c"/>
            </files>
        </component>

        <component Cclass="Device" Cgroup="StdPeriph Drivers" Csub="PWR" Cversion="1.0.0" condition="N32WB452 STDPERIPH RCC">
            <description>Power controller (PWR) driver for N32WB452</description>
            <RTE_Components_h>
        #define RTE_DEVICE_STDPERIPH_PWR
            </RTE_Components_h>
            <files>
                <file category="header" name="firmware/n32wb452_std_periph_driver/inc/n32wb452_pwr.h"/>
                <file category="source" name="firmware/n32wb452_std_periph_driver/src/n32wb452_pwr.c"/>
            </files>
        </component>

        <component Cclass="Device" Cgroup="StdPeriph Drivers" Csub="RCC" Cversion="1.0.0" condition="N32WB452 STDPERIPH">
            <description>Reset and clock control (RCC) driver for N32WB452</description>
            <RTE_Components_h>
        #define RTE_DEVICE_STDPERIPH_RCC
            </RTE_Components_h>
            <files>
                <file category="header" name="firmware/n32wb452_std_periph_driver/inc/n32wb452_rcc.h"/>
                <file category="source" name="firmware/n32wb452_std_periph_driver/src/n32wb452_rcc.c"/>
            </files>
        </component>

        <component Cclass="Device" Cgroup="StdPeriph Drivers" Csub="RTC" Cversion="1.0.0" condition="N32WB452 STDPERIPH">
            <description>Real-time clock (RTC) driver for N32WB452</description>
            <RTE_Components_h>
        #define RTE_DEVICE_STDPERIPH_RTC
            </RTE_Components_h>
            <files>
                <file category="header" name="firmware/n32wb452_std_periph_driver/inc/n32wb452_rtc.h"/>
                <file category="source" name="firmware/n32wb452_std_periph_driver/src/n32wb452_rtc.c"/>
            </files>
        </component>

        <component Cclass="Device" Cgroup="StdPeriph Drivers" Csub="DVP" Cversion="1.0.0" condition="N32WB452 STDPERIPH RCC">
            <description>Digital video port (DVP) driver for N32WB452</description>
            <RTE_Components_h>
        #define RTE_DEVICE_STDPERIPH_DVP
            </RTE_Components_h>
            <files>
                <file category="header" name="firmware/n32wb452_std_periph_driver/inc/n32wb452_dvp.h"/>
                <file category="source" name="firmware/n32wb452_std_periph_driver/src/n32wb452_dvp.c"/>
            </files>
        </component>

        <component Cclass="Device" Cgroup="StdPeriph Drivers" Csub="USBDEV" Cversion="1.0.0" condition="N32WB452 STDPERIPH RCC">
            <description>USB device (USBDEV) driver for N32WB452</description>
            <RTE_Components_h>
        #define RTE_DEVICE_STDPERIPH_USBDEV
            </RTE_Components_h>
            <files>
                <file category="include" name="firmware/n32wb452_usbfs_driver/inc" />
                <file category="header" name="firmware/n32wb452_usbfs_driver/inc/usb_core.h"/>
                <file category="header" name="firmware/n32wb452_usbfs_driver/inc/usb_def.h"/>
                <file category="header" name="firmware/n32wb452_usbfs_driver/inc/usb_init.h"/>
                <file category="header" name="firmware/n32wb452_usbfs_driver/inc/usb_int.h"/>
                <file category="header" name="firmware/n32wb452_usbfs_driver/inc/usb_lib.h"/>
                <file category="header" name="firmware/n32wb452_usbfs_driver/inc/usb_mem.h"/>
                <file category="header" name="firmware/n32wb452_usbfs_driver/inc/usb_regs.h"/>
                <file category="header" name="firmware/n32wb452_usbfs_driver/inc/usb_sil.h"/>
                <file category="header" name="firmware/n32wb452_usbfs_driver/inc/usb_type.h"/>
                <file category="source" name="firmware/n32wb452_usbfs_driver/src/usb_core.c"/>
                <file category="source" name="firmware/n32wb452_usbfs_driver/src/usb_init.c"/>
                <file category="source" name="firmware/n32wb452_usbfs_driver/src/usb_int.c"/>
                <file category="source" name="firmware/n32wb452_usbfs_driver/src/usb_mem.c"/>
                <file category="source" name="firmware/n32wb452_usbfs_driver/src/usb_regs.c"/>
                <file category="source" name="firmware/n32wb452_usbfs_driver/src/usb_sil.c"/>
            </files>
        </component>
        <component Cclass="Device" Cgroup="Algorithm Libs" Csub="Common" Cversion="1.0.0" condition="N32WB452 CMSIS Device">
            <RTE_Components_h>
        #define RTE_DEVICE_ALGO_COMMON
            </RTE_Components_h>
            <files>
                <file category="include" name="firmware/n32wb452_algo_lib/inc" />
                <file category="header" name="firmware/n32wb452_algo_lib/inc/n32wb452_algo_common.h"/>
                <file category="source" name="firmware/n32wb452_algo_lib/lib/n32wb452_algo_common.lib"/>
            </files>
        </component>
        <component Cclass="Device" Cgroup="Algorithm Libs" Csub="AES" Cversion="1.0.0" condition="N32WB452 Algorithm Common">
            <RTE_Components_h>
        #define RTE_DEVICE_ALGO_AES
            </RTE_Components_h>
            <files>
                <file category="header" name="firmware/n32wb452_algo_lib/inc/n32wb452_aes.h"/>
                <file category="source" name="firmware/n32wb452_algo_lib/lib/n32wb452_aes.lib"/>
            </files>
        </component>
        <component Cclass="Device" Cgroup="Algorithm Libs" Csub="DES" Cversion="1.0.0" condition="N32WB452 Algorithm Common">
            <RTE_Components_h>
        #define RTE_DEVICE_ALGO_DES
            </RTE_Components_h>
            <files>
                <file category="header" name="firmware/n32wb452_algo_lib/inc/n32wb452_des.h"/>
                <file category="source" name="firmware/n32wb452_algo_lib/lib/n32wb452_des.lib"/>
            </files>
        </component>
        <component Cclass="Device" Cgroup="Algorithm Libs" Csub="RNG" Cversion="1.0.0" condition="N32WB452 Algorithm Common">
            <RTE_Components_h>
        #define RTE_DEVICE_ALGO_RNG
            </RTE_Components_h>
            <files>
                <file category="header" name="firmware/n32wb452_algo_lib/inc/n32wb452_rng.h"/>
                <file category="source" name="firmware/n32wb452_algo_lib/lib/n32wb452_rng.lib"/>
            </files>
        </component>
        <component Cclass="Device" Cgroup="Algorithm Libs" Csub="HASH" Cversion="1.0.0" condition="N32WB452 Algorithm Common">
            <RTE_Components_h>
        #define RTE_DEVICE_ALGO_HASH
            </RTE_Components_h>
            <files>
                <file category="header" name="firmware/n32wb452_algo_lib/inc/n32wb452_hash.h"/>
                <file category="source" name="firmware/n32wb452_algo_lib/lib/n32wb452_hash.lib"/>
            </files>
        </component>
    </components>
</package>
